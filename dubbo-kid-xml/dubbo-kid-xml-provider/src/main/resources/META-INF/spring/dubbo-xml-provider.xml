<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans    
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://code.alibabatech.com/schema/dubbo
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<!-- 声明应用信息，用于计算依赖关系 -->
	<dubbo:application name="dubbo-kid-xml-provider" owner="Allen.W"  />

	<!-- 当 ProtocolConfig 和 ServiceConfig 某属性没有配置时，采用此缺省值，可选 -->
	<dubbo:provider filter="TestFilter" />

	<!-- 定义注册中心 zk：注册中心配置，竖号分隔表示同时连接多个不同注册中心，同一注册中心的多个集群地址用逗号分隔 -->
	<dubbo:registry address="zookeeper://10.10.50.120:2181" group="allen_dubbo" />
	<!-- <dubbo:registry protocol="zookeeper" address="10.10.50.120:2181" group="allen_dubbo" /> -->

	<!-- 服务消费者和服务提供者之间的通信协议（协议由提供方指定，消费方被动接受）：dubbo使用nio；rest使用http/https -->
	<dubbo:protocol name="dubbo" port="20880" />
	<dubbo:protocol name="rest" port="20890" server="tomcat" />

	<!-- 提供的服务：一个服务可以用多个协议暴露，一个服务也可以注册到多个注册中心 -->
	<dubbo:service interface="com.allen.dubbo.iface.DemoService" ref="demoServiceImpl" protocol="dubbo" />
	<dubbo:service interface="com.allen.dubbo.iface.GroupService" group="moon" ref="moonGroupServiceImpl" protocol="dubbo" />
	<dubbo:service interface="com.allen.dubbo.iface.GroupService" group="star" ref="starGroupServiceImpl" protocol="dubbo" />
	<dubbo:service interface="com.allen.dubbo.iface.CallbackService" ref="callbackServiceImpl" callbacks="1000" protocol="dubbo" >
		<dubbo:method name="addListener">
			<dubbo:argument type="com.allen.dubbo.iface.CallbackListener" callback="true"/>
		</dubbo:method>
	</dubbo:service>
	<dubbo:service interface="com.allen.dubbo.iface.RestService" ref="restServiceImpl" protocol="rest" />

	<dubbo:service interface="com.allen.dubbo.xml.provider.GenericTestService" ref="genericTestServiceImpl" protocol="dubbo" />

	<dubbo:service interface="com.allen.dubbo.iface.BarService" ref="genericServiceImpl" protocol="dubbo" />

	<dubbo:service interface="com.allen.dubbo.iface.AsyncService" ref="asyncServiceImpl" protocol="dubbo" >
		<dubbo:method name="asyncInvoke1" async="true" />
	</dubbo:service>
</beans>

